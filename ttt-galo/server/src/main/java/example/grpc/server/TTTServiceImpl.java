package example.grpc.server;

/* these imported classes are generated by the hello-world-server contract */
import example.grpc.Grpc;
import example.grpc.TTTServiceGrpc;

import io.grpc.stub.StreamObserver;
import example.grpc.client.TTT;

public class TTTServiceImpl extends TTTServiceGrpc.TTTServiceImplBase {
	private TTT ttt = new TTT();


	@Override
	public void currentBoard(Grpc.currentBoardRequest request, StreamObserver<Grpc.currentBoardResponse> responseObserver) {

		Grpc.currentBoardResponse response = Grpc.currentBoardResponse.newBuilder().setCurrentBoard(ttt.currentBoard()).build();
		responseObserver.onNext(response);
		responseObserver.onCompleted();
	}
	@Override
	public void play(Grpc.playRequest request, StreamObserver<Grpc.playResponse> responseObserver) {
	Grpc.playResponse response = Grpc.playResponse.newBuilder().setPlay(ttt.play(request.getRow(), request.getColumn(), request.getPlayer() )).build();
	responseObserver.onNext(response);
	responseObserver.onCompleted();
	}
	
	@Override
	public void checkWinner(Grpc.checkWinnerRequest request, StreamObserver<Grpc.checkWinnerResponse> responseObserver) {
	Grpc.checkWinnerResponse response = Grpc.checkWinnerResponse.newBuilder().setCheckWinner(ttt.checkWinner()).build();
	responseObserver.onNext(response);
	responseObserver.onCompleted();
	}
	@Override
	public void restart(Grpc.restartRequest request, StreamObserver<Grpc.restartResponse> responseObserver){

	}
}